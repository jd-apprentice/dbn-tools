name: Build Package

on:
  push:
    branches: "master"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Update package and install dpkg-dev
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev

      - name: Checkout
        run: git clone https://github.com/jd-apprentice/dbn-tools.git && cd dbn-tools

      - name: Get Package Version
        id: get_version
        run: |
          file=$(find ./dbn-tools/DEBIAN -name 'control')
          string="Version"

          while read -r line; do
              if [[ $line =~ $string ]]; then
                  version=${line:9}
              fi
          done <$file

          echo "::set-output name=version::$version"

      - name: Execute Bash Script
        run: |

          cd dbn-tools

          rm -rf .git
          rm -rf *.png
          rm -rf *.md

          cd ..

          dpkg-deb -b dbn-tools "${{ steps.get_version.outputs.version }}"-dbn-tools.deb

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ðŸ“¦ ${{ steps.get_version.outputs.version }}
          body: |

            ðŸ¤– Release automatically generated by GitHub Actions

          draft: false
          prerelease: false
          files: |
            ${{ steps.get_version.outputs.version }}-dbn-tools.deb
            ${{ steps.get_version.outputs.version }}-dbn-tools.AppImage

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_version.outputs.version }}-dbn-tools.deb
          asset_name: ${{ steps.get_version.outputs.version }}-dbn-tools.deb
          asset_content_type: application/octet-stream
